
rootfs/bin/hello:     file format elf64-x86-64


Disassembly of section .text:

00000000004000e8 <_start>:
#include <stdlib.h>

int main(int argc, char* argv[], char* envp[]);

void _start(void) {
  4000e8:	48 83 ec 08          	sub    $0x8,%rsp
//	int argc = 1;
//	char* argv[0];
//	char* envp[0];
	int res;
	res = main(0, NULL, NULL);
  4000ec:	ba 00 00 00 00       	mov    $0x0,%edx
  4000f1:	be 00 00 00 00       	mov    $0x0,%esi
  4000f6:	bf 00 00 00 00       	mov    $0x0,%edi
  4000fb:	e8 0c 00 00 00       	callq  40010c <main>
   
	exit(res);
  400100:	89 c7                	mov    %eax,%edi
  400102:	e8 18 00 00 00       	callq  40011f <exit>
}
  400107:	48 83 c4 08          	add    $0x8,%rsp
  40010b:	c3                   	retq   

000000000040010c <main>:
int k;
int main (int argc, char* argv[], char* envp[])
{
    int a,c=0;
    a=0;
    k=9+a;
  40010c:	48 8b 05 95 00 20 00 	mov    0x200095(%rip),%rax        # 6001a8 <exit+0x200089>
  400113:	c7 00 09 00 00 00    	movl   $0x9,(%rax)
    return k+c;

}
  400119:	b8 09 00 00 00       	mov    $0x9,%eax
  40011e:	c3                   	retq   

000000000040011f <exit>:
#include <sys/defs.h>
#include <sys/syscall.h>
#include <syscall.h>
#include <stdlib.h>

void exit(int status){
  40011f:	48 83 ec 10          	sub    $0x10,%rsp
  400123:	48 c7 04 24 3c 00 00 	movq   $0x3c,(%rsp)
  40012a:	00 

	syscall_1(SYS_exit,status);
  40012b:	48 63 ff             	movslq %edi,%rdi
  40012e:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
static __inline int64_t syscall_1(uint64_t n, uint64_t a1) {

	int64_t ret;

	if(n==SYS_exit){
		__asm__("movq %0,%%rax;"
  400133:	48 8b 04 24          	mov    (%rsp),%rax
  400137:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
  40013c:	0f 05                	syscall 


}
  40013e:	48 83 c4 10          	add    $0x10,%rsp
  400142:	c3                   	retq   
